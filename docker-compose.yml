version: "3.9"

services:
  teammatching-db:
    image: mysql:8.0
    container_name: teammatching-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3308:3306"
    volumes:
      - teammatching_data:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "127.0.0.1",
          "-p${MYSQL_ROOT_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./teammatching
    container_name: teammatching-backend
    depends_on:
      teammatching-db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://${SPRING_DATASOURCE_HOST}:${SPRING_DATASOURCE_PORT}/${SPRING_DATASOURCE_DB}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "8080:8080"

  frontend:
    build: ./my-app
    container_name: teammatching-frontend
    depends_on:
      - backend
    ports:
      - "5173:80"
    volumes:
      - ./my-app:/app
      - /app/node_modules
    environment:
      # Đây là ví dụ nếu bạn muốn explicit truyền biến môi trường từ .env vào container frontend
      REACT_APP_API_URL: ${VITE_HOST}

volumes:
  teammatching_data:
